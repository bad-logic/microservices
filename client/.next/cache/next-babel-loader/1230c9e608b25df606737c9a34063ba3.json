{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/usr/app/pages/_app.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'bootstrap/dist/css/bootstrap.css'; // global css can be only imported in _app.js file.\n// this is how next js works\n\nimport buildClient from '../api/build-client';\nimport Headers from '../components/headers'; // overriding next's default component\n// creating custom default component \n// thus instead of using next's default component next will use our \n// this custom component and wrap our components with this component and render to screen \n\nvar AppComponent = function AppComponent(props) {\n  var Component = props.Component,\n      pageProps = props.pageProps,\n      currentUser = props.currentUser;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }\n  }, __jsx(Headers, {\n    currentUser: currentUser,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }), __jsx(Component, _extends({\n    currentUser: currentUser\n  }, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  })));\n}; // ONCE THE GETINITIALPROPS FUNCTION IS INVOKED IN CUSTOM APP COMPONENT \n// IT WILL NOT BE INVOKED IN PAGE COMPONENTS\n// SO WE NEED TO CATCH THE GETINITIALPROPS METHOD OF PAGE COMPONENTS\n// AND INVOKE AND SEND OUT THE RESULTS\n// FOR EVERY PAGE COMPONENTS THIS AppComponent is also executed/rendered\n// SO ON ROUTING TO DIFFERENT PAGES THEIR GETINTIALPROPS WILL ALSO BE EXECUTED\n// SINCE THIS APPCOMPONENT IS EXECUTED FOR ALL PAGES\n\n\n_c = AppComponent;\n\nAppComponent.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var client, res, pageProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            client = buildClient(context.ctx.req, 'auth');\n            _context.next = 3;\n            return client.get('/api/auth/v1/current-user');\n\n          case 3:\n            res = _context.sent;\n            pageProps = {}; // MANUALLY INVOKING THE GETINITIALPROPS OF THE PAGE COMPONENT\n            // ALSO WE NEED TO CHECK IF THE GETINITIALPROPS FUNCTION EXISTS IN THAT PAGE\n\n            if (!context.Component.getInitialProps) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 8;\n            return context.Component.getInitialProps(context.ctx, client, res.data.currentUser);\n\n          case 8:\n            pageProps = _context.sent;\n\n          case 9:\n            return _context.abrupt(\"return\", {\n              currentUser: res.data.currentUser,\n              pageProps: pageProps\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // ARGUMENTS PROVIDE FOR PAGE COMPONENT AND CUSTOM APP COMPONENT in getInitialProps function\n// context => {err,req,res,pathname,query,asPath,AppTree} for Page Component\n// context => {AppTree, Component, router, ctx} for Custom App Component\n\n\nexport default AppComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppComponent\");","map":{"version":3,"sources":["/usr/app/pages/_app.js"],"names":["buildClient","Headers","AppComponent","props","Component","pageProps","currentUser","getInitialProps","context","client","ctx","req","get","res","data"],"mappings":";;;;;;;;;AAAA,OAAO,kCAAP,C,CACA;AACA;;AACA,OAAOA,WAAP,MAAwB,qBAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB,C,CAEA;AACA;AACA;AACA;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAU;AAAA,MACpBC,SADoB,GACeD,KADf,CACpBC,SADoB;AAAA,MACVC,SADU,GACeF,KADf,CACVE,SADU;AAAA,MACAC,WADA,GACeH,KADf,CACAG,WADA;AAE3B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,MAAC,OAAD;AAAS,IAAA,WAAW,EAAEA,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EAGH,MAAC,SAAD;AAAW,IAAA,WAAW,EAAEA;AAAxB,KAAyCD,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHG,CAAP;AAKH,CAPD,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAfMH,Y;;AAgBNA,YAAY,CAACK,eAAb;AAAA,sEAA+B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAErBC,YAAAA,MAFqB,GAEZT,WAAW,CAACQ,OAAO,CAACE,GAAR,CAAYC,GAAb,EAAiB,MAAjB,CAFC;AAAA;AAAA,mBAGTF,MAAM,CAACG,GAAP,CAAW,2BAAX,CAHS;;AAAA;AAGrBC,YAAAA,GAHqB;AAIvBR,YAAAA,SAJuB,GAIb,EAJa,EAK3B;AACA;;AAN2B,iBAOxBG,OAAO,CAACJ,SAAR,CAAkBG,eAPM;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAQLC,OAAO,CAACJ,SAAR,CAAkBG,eAAlB,CACdC,OAAO,CAACE,GADM,EAEdD,MAFc,EAGdI,GAAG,CAACC,IAAJ,CAASR,WAHK,CARK;;AAAA;AAQvBD,YAAAA,SARuB;;AAAA;AAAA,6CAepB;AAACC,cAAAA,WAAW,EAACO,GAAG,CAACC,IAAJ,CAASR,WAAtB;AAAkCD,cAAAA,SAAS,EAATA;AAAlC,aAfoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA,I,CAkBA;AACA;AACA;;;AAEA,eAAeH,YAAf","sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\n// global css can be only imported in _app.js file.\n// this is how next js works\nimport buildClient from '../api/build-client';\nimport Headers from '../components/headers';\n\n// overriding next's default component\n// creating custom default component \n// thus instead of using next's default component next will use our \n// this custom component and wrap our components with this component and render to screen \nconst AppComponent = (props) =>{\n    const {Component,pageProps,currentUser} = props;\n    return <div>\n        <Headers currentUser={currentUser}/>\n        {/* Component is the page/component that is going to be rendered */}\n        <Component currentUser={currentUser} {...pageProps}/> \n    </div>\n};\n\n// ONCE THE GETINITIALPROPS FUNCTION IS INVOKED IN CUSTOM APP COMPONENT \n// IT WILL NOT BE INVOKED IN PAGE COMPONENTS\n// SO WE NEED TO CATCH THE GETINITIALPROPS METHOD OF PAGE COMPONENTS\n// AND INVOKE AND SEND OUT THE RESULTS\n// FOR EVERY PAGE COMPONENTS THIS AppComponent is also executed/rendered\n// SO ON ROUTING TO DIFFERENT PAGES THEIR GETINTIALPROPS WILL ALSO BE EXECUTED\n// SINCE THIS APPCOMPONENT IS EXECUTED FOR ALL PAGES\nAppComponent.getInitialProps = async (context)=>{\n\n    const client = buildClient(context.ctx.req,'auth');\n    const res = await client.get('/api/auth/v1/current-user');\n    let pageProps={};\n    // MANUALLY INVOKING THE GETINITIALPROPS OF THE PAGE COMPONENT\n    // ALSO WE NEED TO CHECK IF THE GETINITIALPROPS FUNCTION EXISTS IN THAT PAGE\n    if(context.Component.getInitialProps){\n        pageProps = await context.Component.getInitialProps(\n            context.ctx,\n            client,\n            res.data.currentUser\n        );\n    }\n    // IF NO GETINITIALPROPS DEFINED IN PAGES THEN EMPTY OBJECT WILL BE SENT ref: pageProps={}\n    return {currentUser:res.data.currentUser,pageProps};\n}\n\n// ARGUMENTS PROVIDE FOR PAGE COMPONENT AND CUSTOM APP COMPONENT in getInitialProps function\n// context => {err,req,res,pathname,query,asPath,AppTree} for Page Component\n// context => {AppTree, Component, router, ctx} for Custom App Component\n\nexport default AppComponent;\n\n"]},"metadata":{},"sourceType":"module"}