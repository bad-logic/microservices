{"ast":null,"code":"var _jsxFileName = \"/usr/app/hooks/useRequest.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport { useState } from 'react';\nexport default function useRequest({\n  url,\n  method,\n  body,\n  onSuccess\n}) {\n  const {\n    0: errors,\n    1: setErrors\n  } = useState(null);\n\n  const visualizeError = errs => {\n    setErrors(__jsx(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 23\n      }\n    }, __jsx(\"ul\", {\n      className: \"my-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, errs.map((e, ind) => {\n      if (e.field === 'confirmPassword') return __jsx(\"li\", {\n        key: ind,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 60\n        }\n      }, \"Confirm Password should match the password\");\n      return __jsx(\"li\", {\n        key: ind,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 28\n        }\n      }, e.message);\n    }))));\n  };\n\n  const doRequest = async () => {\n    try {\n      const resp = await axios[method](url, body);\n      setErrors(null);\n      if (onSuccess) onSuccess(resp.data);\n      return resp.data;\n    } catch (err) {\n      console.log(err);\n      visualizeError(err.response.data.errors);\n    }\n  };\n\n  return {\n    doRequest,\n    errors\n  };\n}","map":{"version":3,"sources":["/usr/app/hooks/useRequest.js"],"names":["axios","useState","useRequest","url","method","body","onSuccess","errors","setErrors","visualizeError","errs","map","e","ind","field","message","doRequest","resp","data","err","console","log","response"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAGA,eAAe,SAASC,UAAT,CAAoB;AAACC,EAAAA,GAAD;AAAKC,EAAAA,MAAL;AAAYC,EAAAA,IAAZ;AAAiBC,EAAAA;AAAjB,CAApB,EAAgD;AAE3D,QAAM;AAAA,OAACC,MAAD;AAAA,OAAQC;AAAR,MAAqBP,QAAQ,CAAC,IAAD,CAAnC;;AAEA,QAAMQ,cAAc,GAAIC,IAAD,IAAQ;AACvBF,IAAAA,SAAS,CAAC;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,IAAI,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACV;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIE,IAAI,CAACC,GAAL,CAAS,CAACC,CAAD,EAAGC,GAAH,KAAS;AACd,UAAGD,CAAC,CAACE,KAAF,KAAU,iBAAb,EAAgC,OAAO;AAAI,QAAA,GAAG,EAAED,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAAP;AAChC,aAAO;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeD,CAAC,CAACG,OAAjB,CAAP;AACH,KAHD,CAFJ,CADU,CAAD,CAAT;AAUP,GAXD;;AAYA,QAAMC,SAAS,GAAG,YAAS;AACvB,QAAG;AACC,YAAMC,IAAI,GAAG,MAAMjB,KAAK,CAACI,MAAD,CAAL,CAAcD,GAAd,EAAkBE,IAAlB,CAAnB;AACAG,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA,UAAGF,SAAH,EAAcA,SAAS,CAACW,IAAI,CAACC,IAAN,CAAT;AACd,aAAOD,IAAI,CAACC,IAAZ;AACH,KALD,CAKC,OAAMC,GAAN,EAAU;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAV,MAAAA,cAAc,CAACU,GAAG,CAACG,QAAJ,CAAaJ,IAAb,CAAkBX,MAAnB,CAAd;AACH;AACJ,GAVD;;AAWA,SAAO;AAAES,IAAAA,SAAF;AAAaT,IAAAA;AAAb,GAAP;AACH","sourcesContent":["import axios from 'axios';\nimport {useState} from 'react';\n\n\nexport default function useRequest({url,method,body,onSuccess}){\n\n    const [errors,setErrors] = useState(null);\n\n    const visualizeError = (errs)=>{\n            setErrors(<div className=\"alert alert-danger\" role=\"alert\">\n            <ul className=\"my-0\">\n            {\n                errs.map((e,ind)=>{\n                    if(e.field==='confirmPassword') return <li key={ind}>Confirm Password should match the password</li>;\n                    return <li key={ind}>{e.message}</li>;\n                })\n            }\n            </ul>\n        </div>);\n    };\n    const doRequest = async()=>{\n        try{\n            const resp = await axios[method](url,body);\n            setErrors(null);\n            if(onSuccess) onSuccess(resp.data); \n            return resp.data;\n        }catch(err){\n            console.log(err);\n            visualizeError(err.response.data.errors);\n        }\n    }\n    return { doRequest, errors };\n}"]},"metadata":{},"sourceType":"module"}