{"ast":null,"code":"var _jsxFileName = \"/usr/app/pages/orders/[orderId].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useRequest from \"../../hooks/useRequest\";\nimport { useState } from 'react';\n\nconst orderDetails = ({\n  currentUser,\n  order,\n  networkErrors\n}) => {\n  const {\n    0: expiresAt,\n    1: setExpiresAt\n  } = useState((new Date(order.expiresAt) - new Date()) / 1000);\n  setInterval(() => {\n    setExpiresAt();\n  }, 1000);\n  console.log('order', order);\n  const {\n    doRequest,\n    errors\n  } = useRequest({\n    url: '/api/payments/v1/create-payment',\n    method: 'post',\n    body: {\n      orderId: order ? order.id : null\n    },\n    onSuccess: data => console.log('success', data)\n  });\n  return networkErrors ? __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, __jsx(\"ul\", {\n    className: \"my-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, networkErrors.map((e, ind) => {\n    return __jsx(\"li\", {\n      key: ind,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 36\n      }\n    }, e.message);\n  }))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, __jsx(\"button\", {\n    onClick: doRequest,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Pay\"));\n};\n\norderDetails.getInitialProps = async (context, client, currentUser) => {\n  try {\n    const data = await client.get('/api/order/v1/get-order/' + context.query.orderId);\n    return {\n      order: data.data.order\n    };\n  } catch (err) {\n    console.log(err);\n    return {\n      networkErrors: err.response.data.errors\n    };\n  }\n};\n\nexport default orderDetails;","map":{"version":3,"sources":["/usr/app/pages/orders/[orderId].js"],"names":["useRequest","useState","orderDetails","currentUser","order","networkErrors","expiresAt","setExpiresAt","Date","setInterval","console","log","doRequest","errors","url","method","body","orderId","id","onSuccess","data","map","e","ind","message","getInitialProps","context","client","get","query","err","response"],"mappings":";;;AACA,OAAQA,UAAR,MAAwB,wBAAxB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAaC,EAAAA,KAAb;AAAmBC,EAAAA;AAAnB,CAAD,KAAqC;AACtD,QAAM;AAAA,OAACC,SAAD;AAAA,OAAWC;AAAX,MAA2BN,QAAQ,CAAC,CAAC,IAAIO,IAAJ,CAASJ,KAAK,CAACE,SAAf,IAA0B,IAAIE,IAAJ,EAA3B,IAAuC,IAAxC,CAAzC;AACAC,EAAAA,WAAW,CAAC,MAAM;AACdF,IAAAA,YAAY;AACf,GAFU,EAER,IAFQ,CAAX;AAGAG,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBP,KAApB;AACA,QAAM;AAACQ,IAAAA,SAAD;AAAWC,IAAAA;AAAX,MAAqBb,UAAU,CAAC;AAClCc,IAAAA,GAAG,EAAC,iCAD8B;AAElCC,IAAAA,MAAM,EAAC,MAF2B;AAGlCC,IAAAA,IAAI,EAAC;AACDC,MAAAA,OAAO,EAACb,KAAK,GAACA,KAAK,CAACc,EAAP,GAAU;AADtB,KAH6B;AAMlCC,IAAAA,SAAS,EAAEC,IAAD,IAASV,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBS,IAAtB;AANe,GAAD,CAArC;AASA,SACIf,aAAa,GAEL;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAoC,IAAA,IAAI,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQA,aAAa,CAACgB,GAAd,CAAkB,CAACC,CAAD,EAAGC,GAAH,KAAS;AAC3B,WAAO;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeD,CAAC,CAACE,OAAjB,CAAP;AACC,GAFD,CAFR,CADJ,CAFK,GAYL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAQ,IAAA,OAAO,EAAEZ,SAAjB;AAA4B,IAAA,SAAS,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,CAbZ;AAoBH,CAnCD;;AAwCAV,YAAY,CAACuB,eAAb,GAA+B,OAAOC,OAAP,EAAeC,MAAf,EAAsBxB,WAAtB,KAAoC;AAC/D,MAAG;AACC,UAAMiB,IAAI,GAAG,MAAMO,MAAM,CAACC,GAAP,CAAW,6BAA2BF,OAAO,CAACG,KAAR,CAAcZ,OAApD,CAAnB;AACA,WAAO;AAACb,MAAAA,KAAK,EAACgB,IAAI,CAACA,IAAL,CAAUhB;AAAjB,KAAP;AACH,GAHD,CAGC,OAAM0B,GAAN,EAAU;AACPpB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACA,WAAO;AAACzB,MAAAA,aAAa,EAACyB,GAAG,CAACC,QAAJ,CAAaX,IAAb,CAAkBP;AAAjC,KAAP;AACH;AACJ,CARD;;AAUA,eAAeX,YAAf","sourcesContent":["\nimport  useRequest from \"../../hooks/useRequest\";\nimport {useState} from 'react';\n\nconst orderDetails = ({currentUser,order,networkErrors})=>{\n    const [expiresAt,setExpiresAt] = useState((new Date(order.expiresAt)-new Date())/1000); \n    setInterval(() => {\n        setExpiresAt()\n    }, 1000);\n    console.log('order',order);\n    const {doRequest,errors} = useRequest({\n        url:'/api/payments/v1/create-payment',\n        method:'post',\n        body:{\n            orderId:order?order.id:null\n        },\n        onSuccess:(data)=> console.log('success',data)\n    });\n           \n    return (\n        networkErrors \n                ? \n                <div className=\"alert alert-danger\" role=\"alert\">\n                    <ul className=\"my-0\">\n                        {\n                            networkErrors.map((e,ind)=>{\n                            return <li key={ind}>{e.message}</li>;\n                            })\n                        }\n                    </ul>\n                </div> \n                :\n                <div>\n                    {/* <h1>{ticket.title}</h1>\n                    <h4>Price: {ticket.price}</h4>\n                    {errors} */}\n                    <button onClick={doRequest} className=\"btn btn-primary\">Pay</button>\n                </div>\n        );\n}; \n\n\n\n\norderDetails.getInitialProps = async (context,client,currentUser)=>{\n    try{\n        const data = await client.get('/api/order/v1/get-order/'+context.query.orderId);\n        return {order:data.data.order};\n    }catch(err){\n        console.log(err);\n        return {networkErrors:err.response.data.errors};\n    }\n}\n\nexport default orderDetails;\n"]},"metadata":{},"sourceType":"module"}