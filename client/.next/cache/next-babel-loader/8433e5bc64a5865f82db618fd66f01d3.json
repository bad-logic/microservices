{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/usr/app/pages/tickets/[ticketId].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useRequest from \"../../hooks/useRequest\";\nimport Router from 'next/router';\n\nvar ticketDetails = function ticketDetails(_ref) {\n  _s();\n\n  var currentUser = _ref.currentUser,\n      ticket = _ref.ticket,\n      networkErrors = _ref.networkErrors;\n\n  var _useRequest = useRequest({\n    url: '/api/order/v1/new-order',\n    method: 'post',\n    body: {\n      ticketId: ticket ? ticket.id : null\n    },\n    onSuccess: function onSuccess(data) {\n      return Router.push('/orders/[orderId]', \"/orders/\".concat(data.order.id));\n    }\n  }),\n      doRequest = _useRequest.doRequest,\n      errors = _useRequest.errors;\n\n  var onClickHandler = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return doRequest();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onClickHandler(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return networkErrors ? __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, __jsx(\"ul\", {\n    className: \"my-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, networkErrors.map(function (e, ind) {\n    return __jsx(\"li\", {\n      key: ind,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 36\n      }\n    }, e.message);\n  }))) : __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, ticket.title), __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Price: \", ticket.price), errors, __jsx(\"button\", {\n    onClick: onClickHandler,\n    className: \"btn btn-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Purchase\"));\n};\n\n_s(ticketDetails, \"OLULpwNQjeDV6kwfkr52NMFdmaI=\", false, function () {\n  return [useRequest];\n});\n\nticketDetails.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(context, client, currentUser) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return client.get('/api/ticket/v1/get-ticket/' + context.query.ticketId);\n\n          case 3:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              ticket: data.data.ticket\n            });\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n            return _context2.abrupt(\"return\", {\n              networkErrors: _context2.t0.response.data.errors\n            });\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n\n  return function (_x2, _x3, _x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default ticketDetails;","map":{"version":3,"sources":["/usr/app/pages/tickets/[ticketId].js"],"names":["useRequest","Router","ticketDetails","currentUser","ticket","networkErrors","url","method","body","ticketId","id","onSuccess","data","push","order","doRequest","errors","onClickHandler","e","preventDefault","map","ind","message","title","price","getInitialProps","context","client","get","query","console","log","response"],"mappings":";;;;;;;;;AACA,OAAQA,UAAR,MAAwB,wBAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAsC;AAAA;;AAAA,MAApCC,WAAoC,QAApCA,WAAoC;AAAA,MAAxBC,MAAwB,QAAxBA,MAAwB;AAAA,MAAjBC,aAAiB,QAAjBA,aAAiB;;AAAA,oBAE7BL,UAAU,CAAC;AAClCM,IAAAA,GAAG,EAAC,yBAD8B;AAElCC,IAAAA,MAAM,EAAC,MAF2B;AAGlCC,IAAAA,IAAI,EAAC;AACDC,MAAAA,QAAQ,EAACL,MAAM,GAACA,MAAM,CAACM,EAAR,GAAW;AADzB,KAH6B;AAMlCC,IAAAA,SAAS,EAAC,mBAACC,IAAD;AAAA,aAASX,MAAM,CAACY,IAAP,CAAY,mBAAZ,oBAA2CD,IAAI,CAACE,KAAL,CAAWJ,EAAtD,EAAT;AAAA;AANwB,GAAD,CAFmB;AAAA,MAEjDK,SAFiD,eAEjDA,SAFiD;AAAA,MAEvCC,MAFuC,eAEvCA,MAFuC;;AAWxD,MAAMC,cAAc;AAAA,yEAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,CAAC,CAACC,cAAF;AADmB;AAAA,qBAEbJ,SAAS,EAFI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdE,cAAc;AAAA;AAAA;AAAA,KAApB;;AAKA,SACIZ,aAAa,GAEL;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAoC,IAAA,IAAI,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQA,aAAa,CAACe,GAAd,CAAkB,UAACF,CAAD,EAAGG,GAAH,EAAS;AAC3B,WAAO;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeH,CAAC,CAACI,OAAjB,CAAP;AACC,GAFD,CAFR,CADJ,CAFK,GAYL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKlB,MAAM,CAACmB,KAAZ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYnB,MAAM,CAACoB,KAAnB,CAFJ,EAGKR,MAHL,EAII;AAAQ,IAAA,OAAO,EAAEC,cAAjB;AAAiC,IAAA,SAAS,EAAC,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CAbZ;AAoBH,CApCD;;GAAMf,a;UAEyBF,U;;;AAuC/BE,aAAa,CAACuB,eAAd;AAAA,uEAAgC,kBAAOC,OAAP,EAAeC,MAAf,EAAsBxB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAELwB,MAAM,CAACC,GAAP,CAAW,+BAA6BF,OAAO,CAACG,KAAR,CAAcpB,QAAtD,CAFK;;AAAA;AAElBG,YAAAA,IAFkB;AAAA,8CAGjB;AAACR,cAAAA,MAAM,EAACQ,IAAI,CAACA,IAAL,CAAUR;AAAlB,aAHiB;;AAAA;AAAA;AAAA;AAKxB0B,YAAAA,OAAO,CAACC,GAAR;AALwB,8CAMjB;AAAC1B,cAAAA,aAAa,EAAC,aAAI2B,QAAJ,CAAapB,IAAb,CAAkBI;AAAjC,aANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAed,aAAf","sourcesContent":["\nimport  useRequest from \"../../hooks/useRequest\";\nimport Router from 'next/router';\n\nconst ticketDetails = ({currentUser,ticket,networkErrors})=>{\n\n    const {doRequest,errors} = useRequest({\n        url:'/api/order/v1/new-order',\n        method:'post',\n        body:{\n            ticketId:ticket?ticket.id:null\n        },\n        onSuccess:(data)=> Router.push('/orders/[orderId]',`/orders/${data.order.id}`) \n    });\n\n    const onClickHandler = async (e)=>{\n        e.preventDefault();\n        await doRequest();\n    }\n           \n    return (\n        networkErrors \n                ? \n                <div className=\"alert alert-danger\" role=\"alert\">\n                    <ul className=\"my-0\">\n                        {\n                            networkErrors.map((e,ind)=>{\n                            return <li key={ind}>{e.message}</li>;\n                            })\n                        }\n                    </ul>\n                </div> \n                :\n                <div>\n                    <h1>{ticket.title}</h1>\n                    <h4>Price: {ticket.price}</h4>\n                    {errors}\n                    <button onClick={onClickHandler} className=\"btn btn-primary\">Purchase</button>\n                </div>\n        );\n}; \n\n\n\n\nticketDetails.getInitialProps = async (context,client,currentUser)=>{\n    try{\n        const data = await client.get('/api/ticket/v1/get-ticket/'+context.query.ticketId);\n        return {ticket:data.data.ticket};\n    }catch(err){\n        console.log(err);\n        return {networkErrors:err.response.data.errors};\n    }\n}\n\nexport default ticketDetails;\n"]},"metadata":{},"sourceType":"module"}