{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _urls;\n\nimport axios from 'axios';\nvar urls = (_urls = {\n  // this set up is for docker compose only\n  // in case of kubernetes you need to set server to the ingress nginx \n  'server': \"http://<ingress-service-name>.<namespace-name>.svc.cluster.local\"\n}, _defineProperty(_urls, \"server\", 'http://reverse-proxy'), _defineProperty(_urls, 'browser', ''), _urls);\nexport default function buildClient(req) {\n  if (false) {\n    // WE ARE ON SERVER\n    return axios.create({\n      baseURL: urls.server,\n      headers: req.headers //  headers includes hosts cookies and all \n\n    });\n  } else {\n    // WE ARE ON BROWSER\n    //    return axios.create({\n    //        baseURL: urls[service].browser\n    //    });\n    return axios.create();\n  }\n}","map":{"version":3,"sources":["/usr/app/api/build-client.js"],"names":["axios","urls","buildClient","req","create","baseURL","server","headers"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,IAAI;AACF;AACA;AACA,YAAU;AAHR,oCAIO,sBAJP,0BAKF,SALE,EAKQ,EALR,SAAV;AASA,eAAe,SAASC,WAAT,CAAqBC,GAArB,EAAyB;AACpC,aAAkC;AAC9B;AACA,WAAOH,KAAK,CAACI,MAAN,CAAa;AAChBC,MAAAA,OAAO,EAACJ,IAAI,CAACK,MADG;AAEhBC,MAAAA,OAAO,EAACJ,GAAG,CAACI,OAFI,CAEI;;AAFJ,KAAb,CAAP;AAIJ,GANA,MAMI;AACD;AACH;AACA;AACA;AACA,WAAOP,KAAK,CAACI,MAAN,EAAP;AACA;AACH","sourcesContent":["import axios from 'axios';\n\nconst urls = {\n        // this set up is for docker compose only\n        // in case of kubernetes you need to set server to the ingress nginx \n        'server': \"http://<ingress-service-name>.<namespace-name>.svc.cluster.local\",\n        'server':'http://reverse-proxy', \n        'browser':''\n}\n\n\nexport default function buildClient(req){\n    if(typeof window === 'undefined' ){\n        // WE ARE ON SERVER\n        return axios.create({\n            baseURL:urls.server,\n            headers:req.headers //  headers includes hosts cookies and all \n        });\n   }else{\n       // WE ARE ON BROWSER\n    //    return axios.create({\n    //        baseURL: urls[service].browser\n    //    });\n    return axios.create();\n   }     \n}"]},"metadata":{},"sourceType":"module"}