{"ast":null,"code":"var _jsxFileName = \"/usr/app/pages/tickets/[ticketId].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useRequest from \"../../hooks/useRequest\";\nimport Router from 'next/router';\n\nconst ticketDetails = ({\n  currentUser,\n  ticket,\n  networkErrors\n}) => {\n  const {\n    doRequest,\n    errors\n  } = useRequest({\n    url: '/api/order/v1/new-order',\n    method: 'post',\n    body: {\n      ticketId: ticket ? ticket.id : null\n    },\n    onSuccess: data => Router.push('/orders/orderId', `/orders/${data.order.id}`)\n  });\n  return networkErrors ? __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, __jsx(\"ul\", {\n    className: \"my-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, networkErrors.map((e, ind) => {\n    return __jsx(\"li\", {\n      key: ind,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 36\n      }\n    }, e.message);\n  }))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, ticket.title), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"Price: \", ticket.price), errors, __jsx(\"button\", {\n    onClick: doRequest,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"Purchase\"));\n};\n\nticketDetails.getInitialProps = async (context, client, currentUser) => {\n  try {\n    const data = await client.get('/api/ticket/v1/get-ticket/' + context.query.ticketId);\n    return {\n      ticket: data.data.ticket\n    };\n  } catch (err) {\n    console.log(err);\n    return {\n      networkErrors: err.response.data.errors\n    };\n  }\n};\n\nexport default ticketDetails;","map":{"version":3,"sources":["/usr/app/pages/tickets/[ticketId].js"],"names":["useRequest","Router","ticketDetails","currentUser","ticket","networkErrors","doRequest","errors","url","method","body","ticketId","id","onSuccess","data","push","order","map","e","ind","message","title","price","getInitialProps","context","client","get","query","err","console","log","response"],"mappings":";;;AACA,OAAQA,UAAR,MAAwB,wBAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAaC,EAAAA,MAAb;AAAoBC,EAAAA;AAApB,CAAD,KAAsC;AAExD,QAAM;AAACC,IAAAA,SAAD;AAAWC,IAAAA;AAAX,MAAqBP,UAAU,CAAC;AAClCQ,IAAAA,GAAG,EAAC,yBAD8B;AAElCC,IAAAA,MAAM,EAAC,MAF2B;AAGlCC,IAAAA,IAAI,EAAC;AACDC,MAAAA,QAAQ,EAACP,MAAM,GAACA,MAAM,CAACQ,EAAR,GAAW;AADzB,KAH6B;AAMlCC,IAAAA,SAAS,EAAEC,IAAD,IAASb,MAAM,CAACc,IAAP,CAAY,iBAAZ,EAA+B,WAAUD,IAAI,CAACE,KAAL,CAAWJ,EAAG,EAAvD;AANe,GAAD,CAArC;AASA,SACIP,aAAa,GAEL;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAoC,IAAA,IAAI,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQA,aAAa,CAACY,GAAd,CAAkB,CAACC,CAAD,EAAGC,GAAH,KAAS;AAC3B,WAAO;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeD,CAAC,CAACE,OAAjB,CAAP;AACC,GAFD,CAFR,CADJ,CAFK,GAYL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhB,MAAM,CAACiB,KAAZ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYjB,MAAM,CAACkB,KAAnB,CAFJ,EAGKf,MAHL,EAII;AAAQ,IAAA,OAAO,EAAED,SAAjB;AAA4B,IAAA,SAAS,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CAbZ;AAoBH,CA/BD;;AAoCAJ,aAAa,CAACqB,eAAd,GAAgC,OAAOC,OAAP,EAAeC,MAAf,EAAsBtB,WAAtB,KAAoC;AAChE,MAAG;AACC,UAAMW,IAAI,GAAG,MAAMW,MAAM,CAACC,GAAP,CAAW,+BAA6BF,OAAO,CAACG,KAAR,CAAchB,QAAtD,CAAnB;AACA,WAAO;AAACP,MAAAA,MAAM,EAACU,IAAI,CAACA,IAAL,CAAUV;AAAlB,KAAP;AACH,GAHD,CAGC,OAAMwB,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAO;AAACvB,MAAAA,aAAa,EAACuB,GAAG,CAACG,QAAJ,CAAajB,IAAb,CAAkBP;AAAjC,KAAP;AACH;AACJ,CARD;;AAUA,eAAeL,aAAf","sourcesContent":["\nimport  useRequest from \"../../hooks/useRequest\";\nimport Router from 'next/router';\n\nconst ticketDetails = ({currentUser,ticket,networkErrors})=>{\n\n    const {doRequest,errors} = useRequest({\n        url:'/api/order/v1/new-order',\n        method:'post',\n        body:{\n            ticketId:ticket?ticket.id:null\n        },\n        onSuccess:(data)=> Router.push('/orders/orderId',`/orders/${data.order.id}`) \n    });\n           \n    return (\n        networkErrors \n                ? \n                <div className=\"alert alert-danger\" role=\"alert\">\n                    <ul className=\"my-0\">\n                        {\n                            networkErrors.map((e,ind)=>{\n                            return <li key={ind}>{e.message}</li>;\n                            })\n                        }\n                    </ul>\n                </div> \n                :\n                <div>\n                    <h1>{ticket.title}</h1>\n                    <h4>Price: {ticket.price}</h4>\n                    {errors}\n                    <button onClick={doRequest} className=\"btn btn-primary\">Purchase</button>\n                </div>\n        );\n}; \n\n\n\n\nticketDetails.getInitialProps = async (context,client,currentUser)=>{\n    try{\n        const data = await client.get('/api/ticket/v1/get-ticket/'+context.query.ticketId);\n        return {ticket:data.data.ticket};\n    }catch(err){\n        console.log(err);\n        return {networkErrors:err.response.data.errors};\n    }\n}\n\nexport default ticketDetails;\n"]},"metadata":{},"sourceType":"module"}